Create app    | npm create vite@latest
Installs deps | npm install --save-dev vite-plugin-eslint eslint-config-react-app eslint

* AUTH          | Users of the app are hotel employees. They need to be logged into the application to perform tasks.
* AUTH          | New users can only be signed up inside the applications (to guarantee that only actual hotel employees can get accounts).
* AUTH          | Users should be able to upload an avatar, and change their name and password.
* CABINS        | App needs a table view with all cabins, showing the cabin photo, name, capacity, price, and current discount.
* CABINS        | Users should be able to update or delete a cabin, and to create new cabins (including uploading a photo).
* BOOKING       | App needs a table view with all bookings, showing arrival and departure dates, status, and paid amount, as well as cabin and guest data.
* BOOKING       | The booking status can be "unconfirmed" (booked but not yet checked in), "checked in," or "checked out." The table should be filterable by this important status.
* BOOKING       | Other booking data includes: number of guests, number of nights, guest observations, whether they booked breakfast, breakfast price.
* CHECK IN/OUT  | Users should be able to delete, check in, or check out a booking as the guest arrives (no editing necessary for now).
* CHECK IN/OUT  | Bookings may not have been paid yet on guest arrival. Therefore, on check-in, users need to accept payment (outside the app) and then confirm that payment has been received (inside the app).
* CHECK IN/OUT  | On check-in, the guest should have the ability to add breakfast for the entire stay, if they haven't already.
* GUEST         | Guest data should contain: full name, email, national ID, nationality, and a country flag for easy identification.
* DASHBOARD     | The initial app screen should be a dashboard, to display important information for the last 7, 30, or 90 days:
* DASHBOARD     |     * A list of guests checking in and out on the current day. Users should be able to perform these tasks from here.
* DASHBOARD     |     * Statistics on recent bookings, sales, check-ins, and occupancy rate.
* DASHBOARD     |     * A chart showing all daily hotel sales, showing both "total" sales and "extras" sales (only breakfast at the moment).
* DASHBOARD     |     * A chart showing statistics on stay durations, as this is an important metric for the hotel.
* SETTINGS      | Users should be able to define a few application-wide settings: breakfast price, min and max nights/booking, max guests/booking.
* SETTINGS      | App needs a dark mode.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

_________________________________________________________________________
|   FEATURE CATEGORY   |   NECESSARY PAGES    |   ENDPOINT              |
|                      |   Dashboard          |   /dashboard            |
|   Booking            |   Bookings           |   /bookings             |
|   Cabins             |   Cabins             |   /cabins               |
|   Dashboard          |                      |                         |
|   Check in and out   |   Booking Check In   |   /checkin/:bookingID   |
|   App settings       |   App Settings       |   /settings             |
|                      |   User Sign Up       |   /users                |
|   Authentication     |   User Login         |   /login                |
|                      |   Acct Settings      |   /account              |
-------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------------------

NOTES FOR ReactQueryV5

ðŸ‘‰ If you want to use React Query v5, there are only two small things to change in the project:

isLoading is now called isPending

The cacheTime option is now called gcTime